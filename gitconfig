[alias]
  # Show graph with color and pretty format
	graph = log --graph --full-history --all --color --pretty=tformat:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s%x20%x1b[33m(%an)%x1b[0m"
  # list aliases
  alias = !git config -l | grep alias | cut -c 7-
  ###
  # Viralize workflow
  ###
  # Show graph usefull for rebase workflow
  tree = log --graph --decorate --pretty=oneline --abbrev-commit
  # hard reset current branch to remote
  brup = "!f(){ current_branch=$(git rev-parse --abbrev-ref HEAD); git fetch; git reset --hard origin/$current_branch; }; f"
  # rebase current branch to $1
  rebon = "!f(){ git fetch; git rebase --keep-empty -i origin/$1; }; f"
  rc = !git rebase --continue;
  ra = !git rebase --abort;
  cm = "!f(){ card=$(git rev-parse --abbrev-ref HEAD | cut -d - -f 1-2); git commit -m \"[$card] $1 \"; }; f"
  cmall = !git add -A && git commit -m
  # Undo a rebase after push
  rebabort = !git reflog | grep -v rebase | head -1 | sed -e \"s/^\\([[:alnum:]][[:alnum:]]*\\)\\(.*\\)/\\1/g\" | git reset â€”hard
  # simple wf to save temporary work: 1) git save; 2) git undo (to undo the commit but keeps all changes) or git amend
  save = !git add -A && git commit -m 'SAVEPOINT'
  undo = reset HEAD~1 --mixed
  amend = !git add -A && git commit -a --amend -m $1
  bclean = "!f() { git branch --merged ${1-master} | grep -v " ${1-master}$" | gxargs -r git branch -d; }; f"
  bdone = "!f() { git checkout ${1-master} && git brup && git bclean ${1-master}; }; f"

[apply]
  # Detect whitespace errors when applying a patch
	whitespace = fix

[branch]
	autosetuprebase = always
	autosetupmerge = always

[core]
  # Use custom `.gitignore`
	excludesfile = /Users/master/.gitignore
  # Make `git rebase` safer on OS X
	trustctime = false
  # Prevent showing files whose names contain non-ASCII symbols as unversioned.
	precomposeunicode = true

[color]
  branch = auto
  diff = auto
  status = auto
  ui = true

[color "branch"]
  current = green bold
  local = green
  remote = cyan

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[diff]
  # Detect copies as well as renames
	renames = copies

[diff "bin"]
  # Use `hexdump` to diff binary files
	textconv = hexdump -v -C

[help]
  # Automatically correct and execute mistyped commands
	autocorrect = 1

[merge]
  # Include summaries of merged commits in newly created merge commit messages
	log = true

[user]
	name = Lorenzo Bugiani
	email = lorenzo.bugiani@gmail.com
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[commit]
	template = ~/.stCommitMsg
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
